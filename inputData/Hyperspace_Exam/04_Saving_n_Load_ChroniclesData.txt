Saving and loading Chronicles Data
/*
 
~{TRUE/FALSE} Transactions implicitly assume an object named Connector exists.@TRUE.
~{TRUE/FALSE} Everytime a transaction group is saved, t* routines are autogenerated for every transaction.@TRUE.

~How is data returned from a BulkRPC?@As a deliminted string.
~What is the autogenerated routine known as?@t* routine.
~What is Chrontrols used for?@Single response.
~How do you what cell is affected in the custom validation?@Col parameter = Column number.
Row parameter = Row number.
Counted from 1 to n.
~{TRUE/FALSE} Selecting the Always send to server option has no effect unless the To Server option is also set.@TRUE.
~What are the 3 methods for communicating w/ the Database?@1. Simple RPC
2. Bulk RPC
3. Transaction
~How are fields numbered in BulkRPC?@number sequentially starting w/ 1.
~When might you want to access every every piece of data stored in a Chrontrol?@If its storing a category or network item.  This way you can get the ID, the Title, the Name, etc.
~When does the forward focus control need added to a user control?@1. Activity has embedded control w/ forward focus.
2. Activity has >1 control that can gain focus.
~What are 2 limitations of using Simple RPCs?@1. result is limited to 1 packet of data
2. Arguments must be passed as part of code string
~How can you access the value stored in a Chrontrol?@chrontrolName.RawData
If there is multiple pieces of data use .RawData(true) to get every piece.
.RawData() retrieves the first piece.
~How can you access the value stored in a ChronGrid?@chronGridName.Cell(colNum,rowNum).RawData
If there is multiple pieces of data use .RawData(true) to get every piece.
.RawData() retrieves the first piece.
~Why must you always check that user-entered strings do not contain quote marks for RPC calls?@It if contains quote marks it could be used by malicious user to run arbitrary code.

~What should you do to improve performance when setting data into a Chrongrid?@Set the chrongrid's SkipValidation property to True.  Then fill data.  Then change it back to false.
~How can you access the value stored in a ChronText?@via the Text property.
~What must be added onto user controls so that the user can cycle through the controls with Tab?@Forward focus control.  Set the TabIndex to 0.
~What event can you write your own validation code for a Chrontrol?@AfterValidate event. - This fires after the data has been validated.
~When is a Simple RPC advantagous to use?@When retrieving a small piece of information.
~What are 2 advantages of Bulk RPC to Simple RPC?@1. Bulk RPCs can retrieve more info from the database.
2. Bulk RPCs don't require the programmer to construct a Cachï¿½ code string in VB. Arguments are passed in separately from the tag^routine.

~What event can you write your own validation code for a ChronGrid?@AfterCellValidate event. - This fires when the cell loses the focus.
~Where is the data for a transaction stored?@The zTF array.
~Decribe the structure of the zTF array?@zTF(seq,line)=data.
seq = unique identifier for each field.  Arbirarily assigned.
line = 1 for single response.  line =  0 holds the line count.
~What is ChronText used for?@Multiple response, free text data.
~{TRUE/FALSE} Programming points are compiled into the t* routine.@TRUE.
~What is ChronGrid used to display?@Related response or multiple response, formatted data.
~How do you execute a simple RPC?@If Connector.RPC("cache code",returnVar) Then 
  'Success 
End If
~{TRUE/FALSE} Programming point for an item will always fire only once in any given transaction.@TRUE.
~How do you add extra validation to a Chrontrol?@Inside the Chrontrols validation code, check the Value parameter.  If it isn't valid set the IsValid parameter = False.
~{TRUE/FALSE} Transaction Builder autogenerates a Cache routine for every transaction in the transaction group.@TRUE.
~{TRUE/FALSE} If the Store field programming point is used, the Transaction compiler does not generate code to store the field, relying on the programming point to do so. The same is true for the Retrieve field programming point when loading data.@TRUE.
~How does a Bulk RPC get the parameters from the client?@$$zBulkNxF() returns next parameter passed into client.
~What are the advantages of using a transaction over a Bulk RPC?@1. Binding to Chrontrols/ChronGrid/ChronTexts 
2. Autogenerated cache code for loading/saving data
~How do you execute a Bulk RPC?@If Connector.BuildBulkRPC("d someTag",returnVar,param1,param2,...) Then 
  'Success 
End If
*/
~What does $$zBulkDlm(num) do?@Returns a 2-3 character delimiter, based on the parameter (which should be a number between 1 and 960). The equivalent in VB is the BulkDelimiter() function in the EStringLib module.
~What are the 2 ways to configure transactions?@1. Epic Form Agent (efa) - Used for linking to UI \n2. Stand-alone Transaction Builder - Used for UI independent
~What is the order of the retrieve programming points?@1. Start Tx
2. Start Tx Retrieve
3. Retrieve Field
4. Before Format in Retrieve
5. Format Retrieved Field
6. End Tx Retrieve.
7. End Tx
~What property does a usercontrol need to implement for Hyperspace to give intial focus to the control?@Public Property Get hWnd() As Long 
  hWnd = UserControl.hWnd 
End Property
~What is the order of the store programming points?@1. Start Tx
2. Start Tx Store
3. Format Field for Store
4. Before Storing
5. Store Field
6. After Store Field
7. End Tx Store
8. End Tx
~How do you set the Activity toolbar?@The toolbar descriptor of the Activity records links to a menu record.
~What are 4 benefits from using Foundations Controls instead of built-in VB controls?@1. Built-in validation 
2. Binding to Chronicles items 
3. Showing an entry form button (ex. magnify glass) 
4. Making things recommended or required
~How do you set the infoprovider array?@Public Property Get IEDControl_InfoProviderArray()(Optional ByVal ActivityDescriptor As String, Optional ByVal LaunchOptions As Long, Optional ByVal Requestor As String) As Variant
  If Len(m_sFriendId) = 0 Then
    Exit Property
  End If
  
  On Error GoTo KeyNotFound
  Call m_Activity.VariantStore.Remove("Friend ID")
  On Error GoTo 0
  
  Call m_Activity.VariantStore.Add("Friend ID", m_sFriendId, "Z0ERECORDID")
  IEDControl_InfoProvidersArray = Array(m_Activity.VariantStore)
  
  Exit Property
KeyNotFound:
  Resume Next
End Property
~What function does the server call to pass return values to the client via Bulk RPC?@$$zBulkRep(str) Adds str to the return value that is being passed onto the client.
